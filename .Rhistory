getwd()
#Ejercicio en clase
archivo <- ("C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Practica_4/datos-20231031T140954Z-001/datos/datos_u850.nc") #donde esta el archivo
nc<- nc_open(archivo) #abro el archivo netCDF
library(ncdf4) #cargo libreria ncdf4
nc<-nc_open(archivo) #abro el archivo netCDF
#Me quedo con las variables
comp_u_850<- ncvar_get(nc, "ua850") #extraer la variable
latitudes<- ncvar_get(nc, "lat")
longitudes<- ncvar_get(nc, "lon")
tiempos<- ncvar_get(nc, "time")
tiempos_legibles<- as.Date(tiempos,origin="1949-12-01 00:00:00")
head(tiempos_legibles) #miro los primeros tiempos
tail (tiempos_legibles) #miro los ultimos tiempos
longitudes
#selecciono donde esta la cuenca del plata  (38.75S-23.75S; 64.25O-51.25O)
long_cuenca<-which(longitudes %in% -64.25:-52.25 )
lat_cuenca<-which(latitudes %in% -38.75:-23.75)
datas<-array(data=NA,dim=c(13,16,6))
i<-1
for(anio in anios){
viento<-mean(comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos)==anio)])
datas[,,i]<-(viento)
i<-i+1
}
anios<-2005:2010
for(anio in anios){
viento<-mean(comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos)==anio)])
datas[,,i]<-(viento)
i<-i+1
}
#Ejercicio en clase
library(lubridate)
for(anio in anios){
viento<-mean(comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos)==anio)])
datas[,,i]<-(viento)
i<-i+1
}
for(anio in anios){
viento<-mean(comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos)==anio)])
print(viento)
datas[,,i]<-(viento)
i<-i+1
}
for(anio in anios){
viento<-mean(comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos)==anio)], na.rm=T)
#print(viento)
datas[,,i]<-(viento)
i<-i+1
}
tiempos_legibles
for(anio in anios){
viento<-comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos)==anio)]
datas[,,i]<-c(datas,viento)
i<-i+1
}
for(anio in anios){
viento<-comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos)==anio)]
promedio<-apply(viento,c(3), mean)
datas[,,i]<-(promedio)
i<-i+1
}
promedio<-apply(viento,c(1,2), mean)
datas[,,i]<-(promedio)
viento<-comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos_legibles)==anio)]
promedio<-apply(viento,c(1,2), mean)
datas[,,i]<-(promedio)
datas[,,i]<-(viento)
anios<-2005:2010
datas<-array(data=NA,dim=c(13,16,6))
i<-1
for(anio in anios){
viento<-comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos_legibles)==anio)]
datas[,,i]<-(viento)
i<-i+1
}
tiempos_legibles
promedio<-apply(viento,c(3), mean)
promedio
promedio<-apply(viento,c(1,2), mean)
datas[,,i]<-(promedio)
promedio_df<-data.frame(anios,promedio)
promedio_df<-data.frame(promedio, nrows=anios)
promedio_df<-data.frame(promedio)
View(promedio_df)
prom_anuañ<-apply(viento,c(3),mean)
prom_anual<-apply(viento,c(3),mean)
promedio_df<-data.frame(promedio_anual)
promedio_df<-data.frame(prom_anual)
View(promedio_df)
prom_anual<-apply(datas,c(3),mean)
promedio_df<-data.frame(prom_anual)
View(promedio_df)
datas
View(promedio)
setwd("C:/Users/camil/Downloads/T y Td_era5_BsAs_horario_jul_2013_2022.nc-20231122T232800Z-001")
getwd()
#librerias que pido
library(lubridate)
require(lubridate)
library(ncdf4)
require(ncdf4)
library(ggplot2)
require(ggplot2)
library(dplyr)
require(dplyr)
#El archivo contiene datos horarios T y Td ERA5 (2m).
#Puntos de ret?cula cercano a la ciudad de Buenos Aires para
#los 31 d?as de Julio para los a?os 2013-2022
#7440 datos (10 anios con 31 dias con un dato por hora)
#3 long y 3 lat
nc<-nc_open("T y Td_era5_BsAs_horario_jul_2013_2022.nc") #solo lectura
setwd("C:\Users\camil\Downloads\T y Td_era5_BsAs_horario_jul_2013_2022.nc-20231202T195639Z-001")
setwd("C:\Users\camil\Downloads\T y Td_era5_BsAs_horario_jul_2013_2022.nc-20231202T195639Z-001")
getwd()
setwd("C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Tp_Final/")
getwd()
#librerias que pido
library(lubridate)
require(lubridate)
library(ncdf4)
require(ncdf4)
library(ggplot2)
require(ggplot2)
library(dplyr)
require(dplyr)
#El archivo contiene datos horarios T y Td ERA5 (2m).
#Puntos de ret?cula cercano a la ciudad de Buenos Aires para
#los 31 d?as de Julio para los a?os 2013-2022
#7440 datos (10 anios con 31 dias con un dato por hora)
#3 long y 3 lat
nc<-nc_open("T y Td_era5_BsAs_horario_jul_2013_2022.nc") #solo lectura
class(nc)
#El archivo contiene datos horarios T y Td ERA5 (2m).
#Puntos de ret?cula cercano a la ciudad de Buenos Aires para
#los 31 d?as de Julio para los a?os 2013-2022
#7440 datos (10 anios con 31 dias con un dato por hora)
#3 long y 3 lat
archivo<-"C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Tp_Final/T y Td_era5_BsAs_horario_jul_2013_2022.nc"
nc<-nc_open() #solo lectura
require(ncdf4)
nc<-nc_open(archivo) #solo lectura
head(nc)
length(nc) #lista de 15
getwd()
#El archivo contiene datos horarios T y Td ERA5 (2m).
#Puntos de ret?cula cercano a la ciudad de Buenos Aires para
#los 31 d?as de Julio para los a?os 2013-2022
#7440 datos (10 anios con 31 dias con un dato por hora)
#3 long y 3 lat
archivo<-"C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Tp_Final/T y Td_era5_BsAs_horario_jul_2013_2022.nc"
nc<-nc_open(archivo) #solo lectura
nc_td<-ncvar_get(nc,"d2m")#(lon,lat,time)
head(nc_t)
head(nc_td)
lon<-ncvar_get(nc,varid="longitude")
lat<-ncvar_get(nc,varid="latitude")
time<-ncvar_get(nc,varid="time")
class(time)
dato_faltante<--32767
nc_t[which(nc_t== dato_faltante)] <- NA
nc_td[which(nc_td== dato_faltante)] <- NA
head(time) #transformo con lubridate
fecha_utc<- ymd_hms ("1900-1-1 00:00:00") + hours(time)
head(fecha_utc)
fecha_buenos_aires <- as.POSIXct(fecha_utc, tz = "America/Argentina/Buenos_Aires") #transformo las fechas a hora local de bs as
head(fecha_buenos_aires)
dimnames(nc_t)<-list(lon=lon,lat=lat,time=as.character(fecha_buenos_aires)) #nombro las dim
nc_t<-ncvar_get(nc,"t2m")#(lon,lat,time)
nc_td<-ncvar_get(nc,"d2m")#(lon,lat,time)
dimnames(nc_t)<-list(lon=lon,lat=lat,time=as.character(fecha_buenos_aires)) #nombro las dim
dimnames(nc_td)<-list(lon=lon,lat=lat,time=as.character(fecha_buenos_aires))
str(nc_t) #resumen
str(nc_td)
#inciso a)
nc_t_bsas<-nc_t[1,1,] #me quedo con los primeros valores de long y lat
nc_td_bsas<-nc_td[1,1,] #los cuales corresponden a bs as
#############################################
#este vector contiene las fechas del periodod de analisis (sin repetir)
fecha<- c(ymd("2013-06-30"), seq(ymd("2013-07-01"), ymd("2022-07-31"), by = "day"), ymd("2022-08-01"))
head(fecha)
#extraigo anio, mes, dia y hora
anio <- format(fecha_buenos_aires, "%Y")
mes <- format(fecha_buenos_aires, "%m")
dia <- format(fecha_buenos_aires, "%d")
hora <- format(fecha_buenos_aires, "%H")
fecha_df <- data.frame(anio, mes, dia, hora)
diferencia<-nc_t_bsas-nc_td_bsas
head(diferencia)
dif_df_sinfecha<-data.frame("diferencia"=diferencia)
diferencia_df<-cbind(fecha_df,dif_df_sinfecha)
View(diferencia_df)
nuevo_df <- data.frame()
for (i in 1:nrow(dif_df_sinfecha)) {
if (dif_df_sinfecha$diferencia[i] <=3) {
# Crea un nuevo data frame con la información del elemento i
fecha_niebla_df <- data.frame(anio = fecha_df$anio[i],
mes = fecha_df$mes[i],
dia = fecha_df$dia[i],
hora = fecha_df$hora[i],
diferencia = dif_df_sinfecha$diferencia[i])
# Agrega el nuevo data frame como una fila al data frame "nuevo_df"
nuevo_df <- rbind(nuevo_df, fecha_niebla_df)
}
}
View(nuevo_df)
cant_por_anio<-c()
ciclo<-0
repeat {
cant_por_mes <- 0
for (i in 1:(nrow(nuevo_df) - 1)) {
if (nuevo_df$anio[i] == 2013 + ciclo & nuevo_df$mes[i] == "07" & nuevo_df$dia[i] != nuevo_df$dia[i + 1]) { #el mes esta de mas
cant_por_mes <- cant_por_mes + 1
}
}
cant_por_anio <- c(cant_por_anio, cant_por_mes)
ciclo <- ciclo + 1
if (2013 + ciclo == 2023) {
break
}
}
cant_por_anio
frecuencia_horaria <- table(nuevo_df$hora)
class(frecuencia_horaria)
# Crea el gráfico de barras
barplot(frecuencia_horaria,
main = "Frecuencia horaria de la niebla
de Julio para BS As 2013-2022",
xlab = "hora local",
ylab = "Frecuencia")#chequear
################
#inciso d
# Convierte la tabla en un vector numérico
datos_boxplot <- as.numeric(frecuencia_horaria)
# Crea el diagrama boxplot
boxplot(datos_boxplot,
main = "Diagrama boxplot de datos",
ylab = "Valores")
# Combina las columnas de fecha y hora en una columna de tipo POSIXct
nuevo_df <- nuevo_df %>%
mutate(fecha_junta = as.POSIXct(paste(anio, mes, dia, hora, sep = "-"), format = "%Y-%m-%d-%H"))
# Crea el diagrama boxplot
boxplot(datos_boxplot,
main = "Diagrama boxplot de datos",
ylab = "Valores")
# Combina las columnas de fecha y hora en una columna de tipo POSIXct
nuevo_df <- nuevo_df %>%
mutate(fecha_junta = as.POSIXct(paste(anio, mes, dia, hora, sep = "-"), format = "%Y-%m-%d-%H"))
# Calcula la diferencia en horas entre cada fila y la siguiente
nuevo_df <- nuevo_df %>%
arrange(fecha_junta) %>%
mutate(dif_horas = difftime(lead(fecha_junta), fecha_junta, units = "hours"))
# Filtra las filas donde la diferencia en horas es igual a la duración de un intervalo continuo deseado
intervalo_deseado <- 3600  # Por ejemplo, 1 hora (3600 segundos)
df_coincidentes <- df %>%
filter(dif_horas == intervalo_deseado)
# Agrega una columna con el índice de cada fila
nuevo_df <- nuevo_df %>%
mutate(indice = row_number())
# Filtra solo las filas donde la diferencia en horas es igual a 1
filas_diferencia_1hora <- nuevo_df %>%
filter(dif_horas == 1)
# Muestra el resultado
print(filas_diferencia_1hora)
View(nuevo_df)
