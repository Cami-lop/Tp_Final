VC <- qt(0.99/2,6)
VC
ES <- sqrt(0.0688)/sqrt(7)
ES
LS <- 0.295 +(VC*ES)
LS
LI <- 0.295- (VC*ES)
LI
IC <- c(LS,LI)
IC
n <- ((VC*0.0688)/((VC*ES)*0.86))^2
n
VC <- qnorm(0.01/2,0,1)
VC
ES <- sqrt(0.0688)/sqrt(7)
ES
LS <- 0.295 +(VC*ES)
LS
LI <- 0.295- (VC*ES)
LI
IC <- c(LS,LI)
IC
VC <- qnorm(0.90/2,0,1)
VC
ES <- sqrt(0.0688)/sqrt(7)
ES
LS <- 0.295 +(VC*ES)
LS
LI <- 0.295- (VC*ES)
LI
IC <- c(LS,LI)
IC
n <- ((VC*0.0688)/((VC*ES)*0.86))^2
n
n <- ((VC*0.0688)/((VC*ES)*0.14))^2
n
ppois(160,1/100*1.6)
ppois(0,1.6)
ppois(5,4.8)
ppois(5,4.8,T)
ppois(5,4.8,F)
mu<-(0.125*2+0.175*5+0.225*10+0.275*16+0.325*23+0.375*11+0.425*3)/n
mu
mu<-(0.125*2+0.175*5+0.225*10+0.275*16+0.325*23+0.375*11+0.425*3)/7
mu
mu<-(0.125*2+0.175*5+0.225*10+0.275*16+0.325*23+0.375*11+0.425*3)/70
mu
ES <- sqrt(0.0688)/sqrt(70)
VC <- qnorm(0.90/2,0,1)
VC
LS <- 0.295 +(VC*ES)
LS
VC <- qnorm(0.05,0,1)
VC
LS <- 0.295 +(VC*ES)
LS
LI <- 0.295- (VC*ES)
LI
VC <- qnorm(0.05,0,1)
VC
ES <- sqrt(0.0688)/sqrt(70)
VC <- qnorm(0.90,0,1)
VC
ES <- sqrt(0.0688)/sqrt(70)
ES
LS <- 0.295 +(VC*ES)
LS
VC<-qt(0.995,69) #VC obtenido de la distribuci?n t, y ojo porque es n-1, 70-1=69
VC
?z.test
?Z.test
install.packages("BSDA")
library(BSDA)
?Z.test
?z.test
1.9/2
ppois(2,1.9/2)
ppois(2,1)
ppois(2,1.9/2,F)
ppois(2,1.9,F)
ppois(2,1.8,F)
ppois(2,2,F)
ppois(2,1,F)
ppois(2,1,T)
ppois(2,0.8,T)
ppois(2,0.8,F)
ppois(2,0.95,F)
ppois(2,1.9,F)
ppois(4,3.8,F)
ppois(4,9.5,F)
pbinom(2,2,1.9)
pbinom(2,1.9,2)
pbinom(2,1.9,2,F)
pbinom(2,2,1.9,F)
pbinom(8,100,2)
pbinom(8,100,0.2)
pbinom(8,100,0.2,F)
pbinom(8,100,0.02,F)
ppois(8,0.02)
qbinom(8,100,0.02)
qbinom(8,100,0.02,T)
dbinom(8,100,0.02,T)
dbinom(8,200,0.02)
pbinom(0.02916018,100,0.02)
ppois(2,0.95)
ppois(1,0.95)
ppois(1,0.95,F)
ppois(1,1.9,F)
ppois(1,2/1.95,F)
ppois(2,1.95,F)
ppois(1,2/1.95,F)
ppois(1,2/1.9,F)
ppois(2,1.9/2,F)
ppois(1,1.9/2,F)
ppois(2,1.9)
n1 <- 7
pbinom(2,2,0.7037)
ppois(1.9,2)
ppois(2,1.9)
ppois(2,1.9,F)
ppois(4,3.8,F)
ppois(4,9.5,F)
mu<-(0.125*2+0.175*5+0.225*10+0.275*16+0.325*23+0.375*11+0.425*3)/70
ppois(4,9.5,T)
ppois(4,3.8,T)
ppois(4,3.8,T) -ppois(4,3.8,F)
ppois(4,3.8,T) - ppois(4,3.8,F)
ppois(4,3.8,F) - ppois(4,3.8,F)
ppois(4,3.8,F) - ppois(4,3.8,T)
ppois(5,3.8,T) - ppois(4,3.8,T)
dpois(2,1.9)
dpois(4,3.8)
pbinom(8,200,0.02,T)
pbinom(8,200,0.02,F)
pbinom(8,100,0.02,F)
pbinom(8,200,0.04,F)
pbinom(200,8,0.02,F)
pbinom(8,200,0.02,F)
pbinom(8,100,0.02,F)
qbinom(8,100,0.02,F)
pbinom(8,100,0.04)
pbinom(8,100,0.04,F)
dbinom(2,100,0.04,F)
dbinom(2,100,0.02,F)
dbinom(2,200,0.02,F)
pbinom(4,200,0.02,F)
pbinom(8,200,0.02,F)
pbinom(8,200,0.02,T)
qinom(8,200,0.02,T)
qbinom(8,200,0.02,T)
dbinom(8,200,0.02,T)
dbinom(8,200,0.02,F)
dbinom(8,200,0.02,F) + pbiom(8,200,0.02,T)
o
dbinom(8,200,0.02,F) + pbinom(8,200,0.02,T)
dbinom(8,200,0.02,F) + pbinom(8,200,0.02,F)
dbinom(12,200,0.02,F)
dbinom(12,200,0.02,F) - pbinom(12,200,0.02,F)
dbinom(12,200,0.02,F) - pbinom(12,200,0.02,T)
pbinom(11,200,0.02,T) - pbinom(12,200,0.02,F)
pbinom(11,200,0.02,F) - pbinom(12,200,0.02,T)
pbinom(11,200,0.02,F) - pbinom(12,200,0.02,F)
pbinom(11,200,0.02,T) - pbinom(12,200,0.02,T)
dbinom(11,200,0.02,T) - dbinom(12,200,0.02,T)
dbinom(11,200,0.02,F) - dbinom(12,200,0.02,T)
dbinom(11,200,0.02,F) - dbinom(12,200,0.02,F)
dbinom(12,200,0.02,F) - dbinom(13,200,0.02,F)
dbinom(13,200,0.02,F) - dbinom(12,200,0.02,F)
dbinom(10,50,0.35,F)
pbinom(18,50,0.35,F)
pbinom(18,50,0.35,T)
pbinom(18,50,0.35,F)
pbinom(18,50,0.35,F) + dbinom(18,50,0.35,F)
ppois(10,15,F) - ppois (16,15,F)
ppois(10,15,F) - ppois (16,15,F) + dpois(16,15,F)
ppois(10,15,T) - ppois (16,15,T) + dpois(16,15,F)
ppois(10,15,F) - ppois (16,15,F) + dpois(16,15,F) + dpois(10,15,F)
ppois(10,15,F) - ppois (16,15,F) + dpois(16,15,T) + dpois(10,15,T)
ppois(10,15,F) - ppois (16,15,F) + dpois(10,15,F)
ppois(13,15,F)
qpois(0.6367822,15,F)
qpois(0.6367822,15,T)
ppois(13,15,T)
fo<- c(110,36,44,16)
proporciones <- c(9/16,3/16,3/16,1/16)
install.packages("sf")
############################### Ejercicio ##############################
library(metR)
install.packages("units")
############################### Ejercicio ##############################
library(metR)
require(ncdf4)
library(lubridate)
library(ggplot2)
#Calcular el promedio de temperatura anual (promedio de los 12 meses del
#aÃ±o) y graficar la serie resultante con lineas y puntos. AdemÃ¡s agregar la
#linea de tendencia lineal.
#Quedemosnos unicamente con el punto mas cercano a la estacion OCBA
# (-34,-58)
#archivo <- "C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Practica_4/datos-20231031T140954Z-001/datos/air.mon.mean.nc" #donde esta el archivo
archivo<-"/home/clinux01/Escritorio/CamiLabo/Practica_4/datos-20231031T140954Z-001/datos/air.mon.mean.nc"
datos_OCBA<- ReadNetCDF(archivo, vars = "air",
subset = list(lat =-34,
lon = 360-58))
install.packages("metR")
datos_OCBA<- ReadNetCDF(archivo, vars = "air",
subset = list(lat =-34,
lon = 360-58))
#archivo <- ("C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Practica_4/datos-20231031T140954Z-001/datos/datos_u850.nc") #donde esta el archivo
archivo<-"/home/clinux01/Escritorio/CamiLabo/Practica_4/datos-20231031T140954Z-001/datos/datos_u850.nc"
nc<-nc_open(archivo) #abro el archivo netCDF
nc
#Me quedo con las variables
comp_u_850<- ncvar_get(nc, "ua850") #extraer la variable
latitudes<- ncvar_get(nc, "lat")
longitudes<- ncvar_get(nc, "lon")
tiempos<- ncvar_get(nc, "time")
tiempos_legibles<- as.Date(tiempos,origin="1949-12-01 00:00:00")
#va del 2005 al 2010
head(tiempos_legibles) #miro los primeros tiempos
tail (tiempos_legibles) #miro los ultimos tiempos
#selecciono donde esta la cuenca del plata  (38.75S-23.75S; 64.25O-51.25O)
long_cuenca<-which(longitudes %in% -64.25:-52.25 )
lat_cuenca<-which(latitudes %in% -38.75:-23.75)
anios<-2005:2010
datas<-array(data=NA,dim=c(13,16,6))
i<-1
for(anio in anios){
viento<-mean(comp_u_850[long_cuenca,lat_cuenca,which(year(tiempos_legibles)==anio)])
datas[,,i]<-(viento)
i<-i+1
}
datas
prom_anual<-apply(datas,c(3),mean)
promedio_df<-data.frame(prom_anual)
View(promedio_df)
require(ncdf4) #Al inicio del script o antes de llamar a las funciones de la
require(ncdf4) #Al inicio del script o antes de llamar a las funciones de la
nc<-nc_open ("/home/clinux01/Escritorio/hgt850.nc")
#Para obtener una variable se utiliza el comando ncvar_get y asigno la salida a
#un objeto, en este caso hgt
hgt850<-ncvar_get(nc, "hgt") #obtengo del archivo nc, la variable hgt.
class(nc)
nc
#Almaceno en hgt850 lo que esta en nc y lo q esta entre "" es el nombre corto de
#las variables en el coso q aparece por consola para ver como esta almacenado
hgt850 #escribo el nombre de la variable para ver los datos. Como son??
#asigno las variables de coordenadas a distintas variables. Como son??
Longitud<-ncvar_get(nc,varid="lon")
Latitud<-ncvar_get(nc,varid="lat")
Time<-ncvar_get(nc,varid="time")
nivel<-ncvar_get(nc,varid = "level")
#¿Qué pasa con la variable Time?
head(Time) #pido por pantalla los primeros valores de Time
#transformo los datos del tiempo
# NOTAR que el "comienzo es 1800-1-1)
time <- ymd_hms ("1800-1-1 00:00:00") + hours(Time) #En Time estaban esos numeros
# OTRA forma de leer las fechas es por medio de una libreria que hay que instalar
# libreria para transformar las fechas del ncdf a variable. Esta es mas correcta
library(lubridate)
require(lubridate)
#transformo los datos del tiempo
# NOTAR que el "comienzo es 1800-1-1)
time <- ymd_hms ("1800-1-1 00:00:00") + hours(Time) #En Time estaban esos numeros
#transformo los datos del tiempo
# NOTAR que el "comienzo es 1800-1-1)
time <- ymd_hms ("1800-1-1 00:00:00") + hours(Time) #En Time estaban esos numeros
#de un millon y pico
#leer como vienen los datos, hay veces q se cambia el "hours" por "day"
head(time)
fechas<-as.Date(Time/24,origin="1800-01-01") #poneme como fecha a Time (numeros raros), lo divido por 24 (xq son
#datos diarios pero estan cada 24 hrs) y le pongo el origen
head(fechas)
dimnames(hgt850)<-list(lon=Longitud,lat=Latitud,date=as.character(time))
View(nc)
head(hgt850)
dimnames(hgt850)<-list(lon=Longitud,lat=Latitud,date=as.character(time))
hgt850
nc
str(hgt850) #Me da info de mi variable
#Tp Final Camila Lopez
#Abro el archivo ncdf
getwd()
#setwd("C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Tp_Final/")
setwd("/home/clinux01/Escritorio/CamiLabo/Tp_Final/")
#abro el archivo
archivo<-nc_open("C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Tp_Final/daily_data_buenos_aires_province_1993-2023.nc")
require(ncdf4)  #llamo a la libreria que voy a necesitar
install.packages("ncdf4")
#abro el archivo
archivo<-nc_open("C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Tp_Final/daily_data_buenos_aires_province_1993-2023.nc")
require(ncdf4)  #llamo a la libreria que voy a necesitar
#abro el archivo
archivo<-nc_open("C:/Users/camil/OneDrive/Escritorio/Cami_Labo/Tp_Final/daily_data_buenos_aires_province_1993-2023.nc")
#abro el archivo
archivo<-nc_open("/home/clinux01/Escritorio/CamiLabo/Tp_Final/daily_data_buenos_aires_province_1993-2023.nc")
archivo
# 4 dimen - variable lwe_precipitation_rate
pp<-ncvar_get(archivo,varid="precip") #array de dime 9 lon/8 lat / 9892 dias
pp[which(pp == -9999)]<-NA # veo el datos faltante en la informacion del archivo y lo reemplazo con NA
#1- tiempo cada dia desde 1970-01-01 00:00:00 0:00
tiempo<-ncvar_get(archivo,varid="time")
#2-longitud
lon<-ncvar_get(archivo,varid="longitude")
#3-latitud
lat<-ncvar_get(archivo,varid="latitude")
###############################################################################
require(lubridate) #llamo a las librerias que voy a necesitar
install.packages("lubridate")
###############################################################################
require(lubridate) #llamo a las librerias que voy a necesitar
###############################################################################
require(lubridate) #llamo a las librerias que voy a necesitar
install.packages("lubridate")
tiempos_legibles<- as.Date(tiempo,origin="1970-01-01 00:00:00 ")
head(tiempos_legibles) #desde el 10/01/96 // se repite
tail(tiempos_legibles) #hasta el 31/07/23 #son 26 aÃ±os y 7 meses
tiempo
tiempos_legibles
datas<-array(data=pp,dim=c(9,8,366,27))
media<-apply(datas,c(1,2,3),mean) #creo que es asi
desvio<-apply(datas,c(1,2,3),sd)
pp
#como se repite borro los datos que no quiero
n<-seq(2,92,2)
n
pp_sinrp<-array(data=NA, dim=c(9,8,9846))
#como se repite borro los datos que no quiero
n<-seq(2,92,2)
pp_sinrp<-array(data=NA, dim=c(9,8,9846))
for(i in n){
pp[,,i]<-NULL
tiempo[i]<-NULL
}
for(i in n){
tiempo[i]<-NULL
}
pp_rp<-array(data=NA, dim=c(9,8,46))
temp_rep<-c()
j<-1
for(i in n){
pp_rep[,,j]<-pp[,,i]
temp_rep[j]<-tiempo[i]
j<-j+1
}
#como se repite borro los datos que no quiero
n<-seq(2,92,2)
pp_rep<-array(data=NA, dim=c(9,8,46))
temp_rep<-c()
j<-1
for(i in n){
pp_rep[,,j]<-pp[,,i]
temp_rep[j]<-tiempo[i]
j<-j+1
}
temp_rep
tiempo
#como se repite borro los datos que no quiero
n<-seq(2,184,2)
pp_rep<-array(data=NA, dim=c(9,8,92))
temp_rep<-c()
j<-1
for(i in n){
pp_rep[,,j]<-pp[,,i]
temp_rep[j]<-tiempo[i]
j<-j+1
}
temp_rep
archivo
n<-seq(2,184,2)
n
pp2<-pp[,,-n]
pp2
tiempo_leg_dv<-tiempos_legibles[-n]
tiempo_leg_dv
#abro el archivo
archivo<-nc_open("/home/clinux01/Escritorio/CamiLabo/Tp_Final/daily_data_buenos_aires_province_1993-2023.nc")
archivo
# 4 dimen - variable lwe_precipitation_rate
pp<-ncvar_get(archivo,varid="precip") #array de dime 9 lon/8 lat / 9892 dias
pp[which(pp == -9999)]<-NA # veo el datos faltante en la informacion del archivo y lo reemplazo con NA
#1- tiempo cada dia desde 1970-01-01 00:00:00 0:00
tiempo<-ncvar_get(archivo,varid="time")
#2-longitud
lon<-ncvar_get(archivo,varid="longitude")
#3-latitud
lat<-ncvar_get(archivo,varid="latitude")
tiempos_leg<- as.Date(tiempo,origin="1970-01-01 00:00:00 ")
head(tiempos_legibles) #desde el 01/10/96 // se repite
head(tiempos_leg) #desde el 01/10/96 // se repite
tail(tiempos_leg) #hasta el 31/07/23 #son 26 años y  meses
#como se repite borro los datos que no quiero
n<-seq(2,184,2) #posiciones repetidas
pp2<-pp
pp2<-pp[,,-n]
tiempo_legibles<-tiempos_leg[-n]
media<-array(data=NA, dim=C(9,8,366))
media<-array(data=NA, dim=c(9,8,366))
desvio<-media
datas<-array(data=NA,dim=c(9,8)) #asi tengo que hacer lo del promedio
View(datas)
tiempo_legibles,"% m % d"
format(tiempo_legibles,"% m % d")
dias<-tiempo_legibles
month(dias)
months(dias)
dias<-days(tiempo_legibles)
dias<-format(tiempo_legibles,"dd")
dias<-format(tiempo_legibles,"%dd")
format(tiempo_legibles,"% m % d")
dias
dias<-format(tiempo_legibles,"%d")
time<-format(tiempo_legibles,"%m %d")
datas<-array(data=NA,dim=c(9,8)) #asi tengo que hacer lo del promedio
dias<-format(tiempo_legibles,"%d")
for(dia in dias){
dato<-mean(pp[,,which(format(tiempo_legibles,"%d")==dia)])
datas<-append(datas,dato)
}
View(datas)
dias<-1:31
for(dia in dias){
dato<-mean(pp[,,which(format(tiempo_legibles,"%d")==dia)])
datas<-append(datas,dato)
}
#abro el archivo
archivo<-nc_open("/home/clinux01/Escritorio/CamiLabo/Tp_Final/daily_data_buenos_aires_province_1993-2023.nc")
# 4 dimen - variable lwe_precipitation_rate
pp<-ncvar_get(archivo,varid="precip") #array de dime 9 lon/8 lat / 9892 dias
pp[which(pp == -9999)]<-NA # veo el datos faltante en la informacion del archivo y lo reemplazo con NA
#1- tiempo cada dia desde 1970-01-01 00:00:00 0:00
tiempo<-ncvar_get(archivo,varid="time")
#2-longitud
lon<-ncvar_get(archivo,varid="longitude")
#3-latitud
lat<-ncvar_get(archivo,varid="latitude")
tiempos_leg<- as.Date(tiempo,origin="1970-01-01 00:00:00 ")
head(tiempos_leg) #desde el 01/10/96 // se repite
tail(tiempos_leg) #hasta el 31/07/23 #son 26 años y  meses
#como se repite borro los datos que no quiero
n<-seq(2,184,2) #posiciones repetidas
pp2<-pp
pp2<-pp[,,-n]
tiempo_legibles<-tiempos_leg[-n]
datas<-array(data=NA,dim=c(9,8)) #asi tengo que hacer lo del promedio
dias<-1:31
for(dia in dias){
dato<-mean(pp[,,which(format(tiempo_legibles,"%d")==dia)])
datas<-append(datas,dato)
}
datas
d<-format(tiempo_legibles,"%d")
d
d<-format(tiempo_legibles,%d)
d<-format(tiempo_legibles,"%m %d")
for(dia in dias){
for(mes in meses)
dato<-mean(pp[,,which(format(tiempo_legibles,"%m %d")==d)])
datas<-append(datas,dato)
}
meses<-1:12
d<-format(tiempo_legibles,"%m %d")
for(dia in dias){
for(mes in meses)
dato<-mean(pp[,,which(format(tiempo_legibles,"%m %d")==d)])
datas<-append(datas,dato)
}
d
datas<-append(datas,dato)
dias<-seq(ymd("2020-01-01"),ymd("2020-12-31"),by="")
library("lubridate")
dias<-seq(as.Date("2020-01-01"),as.Date("2020-12-31"),by="")
dias<-seq(as.Date("2020-01-01"),as.Date("2020-12-31"))
dias<-seq(as.Date("2020-01-01"),as.Date("2020-12-31"),1)
datas<-array(data=NA,dim(9,8,366))
datas<-array(data=NA,dim=c(9,8,366))
for(dia in dias){
#dato<-mean(pp2[,,which(format(dia,"%m %d")==d)])
datas[,,dia]<-mean(pp2[,,which(format(dia,"%m %d")==d)])
}
for(dia in dias){
#dato<-mean(pp2[,,which(format(dia,"%m %d")==d)])
print(dia)
print(format(dia,"%m %d"))
print(which(d==format(dia,"%m %d")))
datas[,,dia]<-mean(pp2[,,which(d==format(dia,"%m %d"))])
}
for(dia in dias){
#dato<-mean(pp2[,,which(format(dia,"%m %d")==d)])
print(dia)
#print(format(dia,"%m %d"))
#print(which(d==format(dia,"%m %d")))
datas[,,dia]<-mean(pp2[,,which(d==format(dia,"%m %d"))])
}
for(dia in dias){
#dato<-mean(pp2[,,which(format(dia,"%m %d")==d)])
print(dia)
#print(format(dia,"%m %d"))
#print(which(d==format(dia,"%m %d")))
#datas[,,dia]<-mean(pp2[,,which(d==format(dia,"%m %d"))])
}
dias<-as.Date(dias)
for(dia in dias){
#dato<-mean(pp2[,,which(format(dia,"%m %d")==d)])
print(dia)
#print(format(dia,"%m %d"))
#print(which(d==format(dia,"%m %d")))
#datas[,,dia]<-mean(pp2[,,which(d==format(dia,"%m %d"))])
}
install.packages("lubridate")
###############################################################################
require(lubridate) #llamo a las librerias que voy a necesitar
